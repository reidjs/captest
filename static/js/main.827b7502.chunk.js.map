{"version":3,"sources":["logo.svg","Calculator.js","FlowChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Disclaimer","href","Letter","props","currentDate","Date","toDateString","landlord","refund","tenant","Calculator","state","pastRent","currentRent","maxRent","cpi","showSection","showRentIncrease","showLetter","rentIncreases","id","date","value","handleInput","bind","addRentIncrease","removeRentIncrease","calculateRentIncreasePercentage","calculateMaxRent","handleRentIncreaseValueChange","handleRentIncreaseDateChange","key","event","obj","target","this","setState","t","slice","push","e","idx","findIndex","el","arr","length","splice","plusTenPercent","cpiCalc","parseFloat","min","Math","toFixed","rentIncreasePercentage","that","map","rent","className","onClick","onChange","type","languages","language","label","React","Component","connect","FlowChart","noRentControl","overFifteen","eligible","buildingType","setEligible","setOverFifteen","val","buildings","name","building","style","cursor","App","showCalculator","showEligible","src","logo","dispatch","Footer","Boolean","window","location","hostname","match","initialState","english","eligibleButton","calculatorTitle","eligibleTitle","spanish","store","createStore","action","Object","assign","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.827b7502.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88a6f9cb.svg\";","import React from 'react'\nimport { connect } from 'react-redux';\n\nconst Disclaimer = () => {\n  return (\n    <small>This does not consider local rent control ordinances, please check <a href=\"#\">here</a> for your local laws.</small>\n  )\n}\n\nconst Letter = (props) => {\n  const currentDate = new Date().toDateString();\n  return (\n    <section>\n      <p>Dear {props.landlord || '________________'},</p>\n      <p>According to (bill name) my rent is higher than laws allow. I am owed a refund of ${props.refund}.</p>\n      <p>Thank you,</p>\n      <p>{props.tenant || '________________'}</p>\n      <p>{currentDate}</p>\n    </section>\n  )\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pastRent: 0,\n      currentRent: 0,\n      maxRent: 0,\n      cpi: 0.033,\n      showSection: false,\n      showRentIncrease: false,\n      showLetter: false,\n      tenant: '',\n      landlord: '',\n      rentIncreases: [{id: 0, date: '', value: 0}]\n    }\n    this.handleInput = this.handleInput.bind(this)\n    this.addRentIncrease = this.addRentIncrease.bind(this)\n    this.removeRentIncrease = this.removeRentIncrease.bind(this)\n    this.calculateRentIncreasePercentage = this.calculateRentIncreasePercentage.bind(this)\n    this.calculateMaxRent = this.calculateMaxRent.bind(this)\n    this.handleRentIncreaseValueChange = this.handleRentIncreaseValueChange.bind(this)\n    this.handleRentIncreaseDateChange = this.handleRentIncreaseDateChange.bind(this)\n  }\n  handleInput(key, event) {\n    const obj = {}\n    obj[key] = event.target.value\n    this.setState(obj)\n  }\n  addRentIncrease() {\n    const t = this.state.rentIncreases.slice(0)\n    t.push({id: +new Date(), date: '', value: 0})\n    this.setState({rentIncreases: t})\n  }\n  handleRentIncreaseDateChange(id, e) {\n    // TODO\n  }\n  handleRentIncreaseValueChange(id, e) {\n    const t = this.state.rentIncreases.slice(0)\n    const idx = t.findIndex(el => el.id == id)\n    if (idx < 0) return\n    t[idx].value = e.target.value\n    this.setState({rentIncreases: t})\n  }\n  removeRentIncrease(id) {\n    const arr = this.state.rentIncreases\n    if (arr.length < 2) return\n    const idx = arr.findIndex(el => el.id == id)\n    if (idx < 0) return\n    const t = this.state.rentIncreases.slice(0)\n    const el = t.splice(idx, 1)\n    this.setState({rentIncreases: t})\n  }\n  calculateMaxRent() {\n    const plusTenPercent = this.state.pastRent * 1.1\n    const cpiCalc = this.state.pastRent * (1 + 0.05 + parseFloat(this.state.cpi))\n    const min = Math.min(plusTenPercent, cpiCalc)\n    return parseFloat(min).toFixed(2)\n  }\n  calculateRentIncreasePercentage() {\n    return parseFloat((this.state.currentRent - this.state.pastRent)/this.state.pastRent * 100).toFixed(0);\n  }\n  \n  render() {\n    const maxRent = this.calculateMaxRent();\n    const rentIncreasePercentage = this.calculateRentIncreasePercentage();\n    const refund = () => {\n      const t = parseFloat(this.state.currentRent - maxRent).toFixed(2)\n      return t > 0 ? t : '0'\n    }\n    const that = this;\n    const rentIncreases = this.state.rentIncreases.map(rent => {\n      return (\n        <li key={rent.id}>\n          {this.state.rentIncreases.length > 1 &&\n            <button className=\"remove\" onClick={() => that.removeRentIncrease(rent.id)}>x</button>\n          }\n          <div>\n            <h3>When was the rent increase?</h3>\n            <input onChange={(e) => that.handleRentIncreaseDateChange(rent.id, e)} type=\"date\"></input> \n            <h3>What was the new rent?</h3>\n            <input onChange={(e) => this.handleRentIncreaseValueChange(rent.id, e)}></input>\n          </div>\n        </li>\n      )\n    })\n    return (\n      <div>\n        <h1>{this.props.languages[this.props.language]['calculatorTitle']}</h1>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Where do you live?</h5>\n            <select onChange={(e) => this.handleInput('cpi', e)}>\n              <option value=\"0.033\" label=\"Select your location\"></option>\n              <option value=\"0.04\" label=\"Oakland-Hayward-San Francisco\"></option>\n              <option value=\"0.033\" label=\"Los Angeles-Long Beach-Anaheim\"></option>\n            </select>\n          </div>\n        </div>\n        <br />\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">What was your rent on March 15, 2019?</h5>\n            <input type='number' value={this.state.pastRent} onChange={(e) => this.handleInput('pastRent', e)}></input>\n          </div>\n        </div>\n        <br />\n        <h4>Your maximum rent should be <strong>${maxRent}</strong></h4>\n        <Disclaimer />\n        <br />\n        <br />\n        <button className=\"btn btn-outline-primary\" onClick={() => this.setState({showSection: true})}>Was I overcharged?</button>\n        <br />\n        {this.state.showSection &&\n          <section>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">What is your current rent?</h5>\n                <input type='number' value={this.state.currentRent} onChange={(e) => this.handleInput('currentRent', e)}></input>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Did your rent increase within the year (between March 15th and now)?</h5>\n                <button onClick={() => this.setState({showRentIncrease: true})}>Yes</button><button onClick={() => this.setState({showRentIncrease: false})}>No</button>\n                {this.state.showRentIncrease &&\n                  <section className=\"rent-increases\">\n                    <ul>{rentIncreases}</ul>\n                    <button className=\"add\" onClick={this.addRentIncrease}>+</button>\n                  </section>\n                }\n              </div>\n            </div>\n            <br />\n            <h4>Your rent increased by {rentIncreasePercentage}%. Your maximum rent is {maxRent} and you should be refunded ${refund()}</h4>\n            <Disclaimer />\n            <br />\n            <br />\n            <button onClick={() => this.setState({showLetter: true})}>Generate a letter to your landlord\n            </button>\n          </section>\n        }\n        {this.state.showLetter &&\n          <div>\n            <h2>What's your name?</h2>\n            <input value={this.state.tenant} type=\"text\" onChange={(e) => this.handleInput('tenant', e)}></input>\n            <h2>What's your landlord's name?</h2>\n            <input value={this.state.landlord} onChange={(e) => this.handleInput('landlord', e)}></input>\n            <h1>Send this letter to your landlord:</h1>\n            <Letter tenant={this.state.tenant} landlord={this.state.landlord} refund={refund()}></Letter>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    languages: state.languages,\n    language: state.language\n  })\n};\n\nexport default connect(mapStateToProps)(Calculator);\n","import React from 'react'\nimport { connect } from 'react-redux';\n\nclass FlowChart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      noRentControl: false,\n      overFifteen: false,\n      eligible: 'unknown',\n      buildingType: 'unknown',\n    }\n    this.setEligible = this.setEligible.bind(this)\n  }\n  setEligible() {\n    if (!this.state.overFifteen ||\n        this.state.buildingType === 'dorm')\n      this.setState({eligible: 'no'})\n    else\n      this.setState({eligible: 'unknown'})\n  }\n  render() {\n    const setOverFifteen = val => {\n      this.setState({overFifteen: val}, () => {\n        this.setEligible()\n      });\n    }\n    const setBuildingType = type => {\n      this.setState({buildingType: type}, () => {\n        this.setEligible()\n      });\n    }\n    const buildingList = [{name: 'Apartment', type: 'apartment'}, {name: 'House', type:'house'}, {name: 'Dorm', type: 'dorm'}]\n    const buildings = buildingList.map(building => {\n      return (\n        <li style={{cursor: 'pointer'}} className={building.type == this.state.buildingType ? 'active' : ''} onClick={() => setBuildingType(building.type)} key={building.name}>{building.name}</li>\n      )\n    })\n    return (\n      <div>\n        <h1>{this.props.languages[this.props.language]['eligibleTitle']}</h1>\n        <h2>Does your city have existing ordinance</h2>\n        <ul>\n          <li>Berkeley</li>\n          <li>San Francisco</li>\n        </ul>\n        <button onClick={() => this.setState({noRentControl: true})}>My city is not listed OR it has less protections than the statewide law.</button>\n        {this.state.noRentControl &&\n          <div>\n            <h2>Is your building over 15 years old?</h2>\n            <div>\n              <button onClick={() => {setOverFifteen(true)}}>Yes</button>\n              <button onClick={() => {setOverFifteen(false)}}>No</button>\n            </div>\n          </div>\n        }\n        {this.state.overFifteen &&\n          <div>\n            <h2>What type of building is it?</h2>\n            <ul>\n              {buildings}\n            </ul>\n          </div>\n          \n        }\n        {this.state.eligible == 'no' &&\n          <h1>Sorry, you are not eligible</h1>\n        }\n        {this.state.eligible == 'yes' &&\n          <h1>Congrats, you are eligible</h1>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    languages: state.languages,\n    language: state.language\n  })\n};\n\nexport default connect(mapStateToProps)(FlowChart);","import React from 'react';\nimport Calculator from './Calculator'\nimport logo from './logo.svg';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport FlowChart from './FlowChart'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showCalculator: false,\n      showEligible: false,\n    }\n  }\n  render() {\n    return (\n      <div className=\"app-container\">\n        <div>\n          <div className={(!this.state.showCalculator && !this.state.showEligible) ? 'top-nav hero' : 'top-nav'}>\n            <div>\n              <img onClick={() => this.setState({showCalculator: false, showEligible: false})} src={logo}>\n              </img>\n              <button className=\"btn btn-outline-primary\" onClick={() => this.setState({showCalculator: false, showEligible: true})}>{this.props.languages[this.props.language]['eligibleButton']}</button>\n              <button className=\"btn btn-outline-primary\" onClick={() => this.setState({showEligible: false, showCalculator: true})}>I'm eligible (Calculator)</button>\n            </div>\n            <div>\n              <button className=\"btn btn-outline-secondary\" onClick={() => this.props.dispatch({type: 'CHANGE_LANGUAGE', language: 'english'})}>English</button>\n              <button className=\"btn btn-outline-secondary\" onClick={() => this.props.dispatch({type: 'CHANGE_LANGUAGE', language: 'spanish'})}>Espanol</button>\n            </div>\n          </div>\n          <div className=\"container\">\n          {this.state.showCalculator &&\n            <Calculator />\n          }\n          {this.state.showEligible &&\n            <FlowChart />\n          }\n          </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst Footer = () => {\n  return (\n    <footer>Footer goes here</footer>\n  )\n}\n\nconst mapStateToProps = state => {\n  return ({\n    languages: state.languages,\n    language: state.language\n  })\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore} from 'redux'\n\nconst english = {\n  eligibleButton: 'Am I eligible?',\n  calculatorTitle: 'Rent Cap Calculator',\n  eligibleTitle: 'Are you eligible?'\n}\n\nconst spanish = {\n  eligibleButton: 'Porque no los dos?',\n  calculatorTitle: 'Estas bien',\n  eligibleTitle: 'Como estas'\n}\n\nconst language = 'english'\n\nconst languages = {\n  english, spanish\n}\n\nconst initialState = {\n  languages,\n  language\n}\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case 'CHANGE_LANGUAGE':\n      return Object.assign({}, state, {\n        language: action.language\n      })\n    default:\n      return state\n  }\n}\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}